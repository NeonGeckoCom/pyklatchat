# NEON AI (TM) SOFTWARE, Software Development Kit & Application Development System
#
# Copyright 2008-2021 Neongecko.com Inc. | All Rights Reserved
#
# Notice of License - Duplicating this Notice of License near the start of any file containing
# a derivative of this software is a condition of license for this software.
# Friendly Licensing:
# No charge, open source royalty free use of the Neon AI software source and object is offered for
# educational users, noncommercial enthusiasts, Public Benefit Corporations (and LLCs) and
# Social Purpose Corporations (and LLCs). Developers can contact developers@neon.ai
# For commercial licensing, distribution of derivative works or redistribution please contact licenses@neon.ai
# Distributed on an "AS IS‚Äù basis without warranties or conditions of any kind, either express or implied.
# Trademarks of Neongecko: Neon AI(TM), Neon Assist (TM), Neon Communicator(TM), Klat(TM)
# Authors: Guy Daniels, Daniel McKnight, Elon Gasper, Richard Leeds, Kirill Hrymailo
#
# Specialized conversational reconveyance options from Conversation Processing Intelligence Corp.
# US Patents 2008-2021: US7424516, US20140161250, US20140177813, US8638908, US8068604, US8553852, US10530923, US10530924
# China Patent: CN102017585  -  Europe Patent: EU2156652  -  Patents Pending

# TODO: insert this file to Docker and deploy Nginx as a container
# Note: This structure is reference-only, actual port bindings and constants may vary based on environment

# Chat Client configs

upstream pyklatchat_client {
    server 127.0.0.1:8011;
    server 127.0.0.1:8012;
}

server {
    listen 80;
    server_name 3333.us www.3333.us;
    return 301 https://3333.us$request_uri;
}

server {
    listen 443 ssl;
    keepalive_timeout 70;

    server_name 3333.us www.3333.us;

    ssl_certificate /etc/letsencrypt/live/3333.us/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/3333.us/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
      proxy_pass http://pyklatchat_client;
    }
}


# Chat Server configs

upstream pyklatchat_server {
    server 127.0.0.1:8010;
}

server {
    listen 80;
    server_name api.3333.us;
    return 301 https://api.3333.us$request_uri;
}

server {
    listen 443 ssl;
    keepalive_timeout 70;

    server_name api.3333.us;

    ssl_certificate /etc/letsencrypt/live/3333.us/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/3333.us/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
      proxy_pass http://pyklatchat_server;
    }
}